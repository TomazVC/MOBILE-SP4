import { brapiService } from './brapiService';

class AIService {
  private conversationHistory: string[] = [];
  private responseCache = new Map<string, string>();

  private offlineResponses = {
    'o que √©': 'Desculpe, estou offline no momento. Tente novamente quando tiver conex√£o com a internet.',
    'como': 'No momento estou sem conex√£o. Por favor, verifique sua internet e tente novamente.',
    'petr4': 'PETR4 √© a a√ß√£o da Petrobras, uma das maiores empresas de petr√≥leo do Brasil. √â uma a√ß√£o de grande liquidez e muito negociada na B3. √â considerada uma a√ß√£o de commodities e est√° sujeita √†s varia√ß√µes do pre√ßo do petr√≥leo.',
    'vale3': 'VALE3 √© a a√ß√£o da Vale, uma das maiores mineradoras do mundo. √â conhecida por ser uma das principais exportadoras de min√©rio de ferro. √â uma a√ß√£o de commodities e est√° sujeita √†s varia√ß√µes dos pre√ßos internacionais.',
    'itub4': 'ITUB4 √© a a√ß√£o do Ita√∫ Unibanco, um dos maiores bancos privados do Brasil. √â considerada uma a√ß√£o de dividendos e tem boa liquidez. Bancos s√£o sens√≠veis √† taxa de juros e ao cen√°rio econ√¥mico.',
    'mglu3': 'MGLU3 √© a a√ß√£o da Magazine Luiza, uma das maiores varejistas do Brasil. √â conhecida por seu forte crescimento no e-commerce. √â uma a√ß√£o de varejo e est√° sujeita ao consumo interno.',
    'bbdc4': 'BBDC4 √© a a√ß√£o do Banco Bradesco, um dos maiores bancos privados do Brasil. √â considerada uma a√ß√£o de dividendos e tem boa liquidez. Bancos s√£o sens√≠veis √† taxa de juros.',
    'abev3': 'ABEV3 √© a a√ß√£o da Ambev, uma das maiores cervejarias do mundo. √â conhecida por marcas como Skol, Brahma e Antarctica. √â uma a√ß√£o de consumo e est√° sujeita ao consumo interno.',
    'investimento': 'Investimento √© o ato de aplicar dinheiro com o objetivo de obter retorno financeiro no futuro. Pode ser feito em a√ß√µes, fundos, t√≠tulos, im√≥veis, etc. O importante √© diversificar e ter paci√™ncia.',
    'portfolio': 'Portfolio √© o conjunto de investimentos de uma pessoa ou empresa. A diversifica√ß√£o √© importante para reduzir riscos. Um bom portfolio deve ter diferentes tipos de ativos.',
    'diversifica√ß√£o': 'Diversifica√ß√£o √© a estrat√©gia de espalhar investimentos em diferentes ativos para reduzir o risco total do portfolio. N√£o coloque todos os ovos na mesma cesta!',
    'a√ß√µes': 'A√ß√µes s√£o pequenas partes de uma empresa que voc√™ pode comprar. Quando a empresa vai bem, o valor da a√ß√£o tende a subir. √â importante estudar a empresa antes de investir.',
    'mercado': 'O mercado de a√ß√µes √© onde s√£o negociadas as a√ß√µes das empresas. No Brasil, a principal bolsa √© a B3. √â importante entender que o mercado tem ciclos de alta e baixa.',
    'risco': 'Risco √© a possibilidade de perder dinheiro em um investimento. Quanto maior o risco, maior o potencial de retorno. √â importante investir apenas o que pode perder.',
    'retorno': 'Retorno √© o ganho ou perda de um investimento. Pode ser expresso em percentual ou valor absoluto. O retorno esperado deve compensar o risco assumido.',
    'liquidez': 'Liquidez √© a facilidade de comprar ou vender um investimento. A√ß√µes de grandes empresas t√™m mais liquidez. √â importante para conseguir sair do investimento quando necess√°rio.',
    'dividendos': 'Dividendos s√£o parte do lucro da empresa distribu√≠da aos acionistas. A√ß√µes que pagam dividendos s√£o boas para quem busca renda passiva.',
    'an√°lise': 'An√°lise de investimentos pode ser fundamentalista (estudar a empresa) ou t√©cnica (estudar gr√°ficos). Ambas s√£o importantes para tomar decis√µes informadas.',
    'b3': 'B3 √© a bolsa de valores do Brasil, onde s√£o negociadas as a√ß√µes das empresas brasileiras. √â a terceira maior bolsa da Am√©rica Latina.',
    'ibovespa': 'Ibovespa √© o principal √≠ndice da B3, que acompanha as principais a√ß√µes negociadas. √â usado como refer√™ncia do desempenho do mercado brasileiro.',
    default: 'Estou temporariamente indispon√≠vel. Tente novamente em alguns instantes ou fa√ßa uma pergunta mais espec√≠fica sobre investimentos.',
  };

  async chat(userMessage: string): Promise<string> {
    // Verificar cache primeiro
    const cacheKey = userMessage.toLowerCase().trim();
    if (this.responseCache.has(cacheKey)) {
      console.log('Using cached response');
      return this.responseCache.get(cacheKey)!;
    }

    // Adicionar contexto financeiro se necess√°rio
    const context = await this.getFinancialContext(userMessage);
    const messageWithContext = context ? `${context}\n\n${userMessage}` : userMessage;
    
    // Adicionar ao hist√≥rico
    this.conversationHistory.push(userMessage);
    
    // Manter apenas √∫ltimas 5 mensagens
    if (this.conversationHistory.length > 5) {
      this.conversationHistory = this.conversationHistory.slice(-5);
    }

    // Sistema de resposta inteligente
    const message = messageWithContext.toLowerCase();
    
    // Procurar por a√ß√µes espec√≠ficas (mais espec√≠fico primeiro)
    const stockSymbols = ['petr4', 'vale3', 'itub4', 'mglu3', 'bbdc4', 'abev3', 'wege3', 'b3sa3', 'suzb3', 'jbss3'];
    const stockMatch = stockSymbols.find(symbol => message.includes(symbol));
    
    if (stockMatch) {
      const response = this.offlineResponses[stockMatch as keyof typeof this.offlineResponses];
      this.responseCache.set(cacheKey, response);
      return response;
    }
    
    // Procurar por conceitos financeiros (ordem de prioridade)
    const financialConcepts = [
      'investimento', 'portfolio', 'diversifica√ß√£o', 'a√ß√µes', 'mercado', 
      'risco', 'retorno', 'liquidez', 'dividendos', 'an√°lise', 'b3', 'ibovespa'
    ];
    
    const conceptMatch = financialConcepts.find(concept => message.includes(concept));
    
    if (conceptMatch) {
      const response = this.offlineResponses[conceptMatch as keyof typeof this.offlineResponses];
      this.responseCache.set(cacheKey, response);
      return response;
    }
    
    // Procurar por palavras-chave gerais
    if (message.includes('o que √©') || message.includes('o que significa')) {
      const response = 'Para explicar melhor, voc√™ pode ser mais espec√≠fico? Por exemplo: "O que √© PETR4?" ou "O que √© diversifica√ß√£o?"';
      this.responseCache.set(cacheKey, response);
      return response;
    }
    
    if (message.includes('como') && message.includes('investir')) {
      const response = 'Para come√ßar a investir, recomendo: 1) Estabelecer objetivos claros, 2) Definir seu perfil de risco, 3) Diversificar os investimentos, 4) Come√ßar com valores pequenos. Lembre-se: nunca invista dinheiro que n√£o pode perder!';
      this.responseCache.set(cacheKey, response);
      return response;
    }
    
    if (message.includes('melhor') || message.includes('recomend')) {
      const response = 'N√£o posso dar recomenda√ß√µes espec√≠ficas de investimento, pois cada pessoa tem objetivos e perfil de risco diferentes. Recomendo consultar um assessor de investimentos qualificado.';
      this.responseCache.set(cacheKey, response);
      return response;
    }
    
    if (message.includes('ajuda') || message.includes('help')) {
      const response = 'Posso te ajudar com:\n‚Ä¢ Explica√ß√µes sobre a√ß√µes (PETR4, VALE3, ITUB4, MGLU3, etc.)\n‚Ä¢ Conceitos de investimento (diversifica√ß√£o, portfolio, risco)\n‚Ä¢ Estrat√©gias b√°sicas de investimento\n‚Ä¢ D√∫vidas sobre o mercado financeiro\n\nFa√ßa uma pergunta espec√≠fica!';
      this.responseCache.set(cacheKey, response);
      return response;
    }
    
    if (message.includes('obrigado') || message.includes('valeu') || message.includes('thanks')) {
      const response = 'De nada! üòä Fico feliz em ajudar. Se tiver mais d√∫vidas sobre investimentos, √© s√≥ perguntar!';
      this.responseCache.set(cacheKey, response);
      return response;
    }
    
    // Fallback gen√©rico
    const response = this.offlineResponses.default;
    this.responseCache.set(cacheKey, response);
    return response;
  }

  private async getFinancialContext(message: string): Promise<string | null> {
    // Detectar se a mensagem menciona a√ß√µes espec√≠ficas
    const stockSymbols = ['PETR4', 'VALE3', 'MGLU3', 'ITUB4', 'BBDC4', 'ABEV3', 'WEGE3', 'B3SA3', 'SUZB3', 'JBSS3'];
    const mentionedStocks = stockSymbols.filter(symbol => 
      message.toUpperCase().includes(symbol)
    );

    if (mentionedStocks.length > 0) {
      try {
        const quotes = await brapiService.getStockQuotes(mentionedStocks);
        const context = quotes.map(stock => 
          `${stock.symbol}: R$ ${stock.regularMarketPrice.toFixed(2)} (${stock.regularMarketChangePercent > 0 ? '+' : ''}${stock.regularMarketChangePercent.toFixed(2)}%)`
        ).join(', ');
        
        return `Dados atuais: ${context}`;
      } catch (error) {
        return null;
      }
    }

    return null;
  }

  clearHistory() {
    this.conversationHistory = [];
  }

  clearCache() {
    this.responseCache.clear();
  }
}

export const aiService = new AIService();
